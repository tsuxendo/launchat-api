# Generated by Django 3.2.7 on 2021-09-07 00:34

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Hashtag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('name', models.CharField(max_length=32, verbose_name='name')),
            ],
            options={
                'verbose_name': 'hashtag',
                'verbose_name_plural': 'hashtags',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('is_archived', models.BooleanField(default=False, verbose_name='archive')),
                ('is_open', models.BooleanField(default=True, verbose_name='public')),
                ('title', models.CharField(blank=True, max_length=64, verbose_name='title')),
                ('content', models.TextField(blank=True, verbose_name='content')),
                ('mention', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.issue', verbose_name='mention')),
            ],
            options={
                'verbose_name': 'issue',
                'verbose_name_plural': 'issues',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='IssueMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('is_archived', models.BooleanField(default=False, verbose_name='archive')),
                ('message', models.TextField(blank=True, verbose_name='message')),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.issue', verbose_name='issue')),
            ],
            options={
                'verbose_name': 'issue message',
                'verbose_name_plural': 'issue messages',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('name', models.CharField(max_length=32, verbose_name='name')),
                ('catchphrase', models.CharField(blank=True, max_length=64, verbose_name='catchphrase')),
                ('description', models.CharField(blank=True, max_length=512, verbose_name='description')),
                ('avatar_url', models.URLField(blank=True, verbose_name='avatar_url')),
            ],
            options={
                'verbose_name': 'project',
                'verbose_name_plural': 'projects',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ProjectMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('is_archived', models.BooleanField(default=False, verbose_name='archive')),
                ('message', models.TextField(verbose_name='message')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.project', verbose_name='project')),
            ],
            options={
                'verbose_name': 'project message',
                'verbose_name_plural': 'project messages',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('deadlined_at', models.DateTimeField(blank=True, null=True, verbose_name='date deadlined')),
                ('payment_id', models.CharField(blank=True, max_length=64, verbose_name='payment id')),
                ('stage', models.IntegerField(choices=[(0, 'issued'), (1, 'agreed'), (2, 'temporarily paid'), (3, 'submitted'), (4, 'valuated'), (5, 'approved'), (6, 'completed')], verbose_name='stage')),
                ('method', models.IntegerField(choices=[(0, 'issue'), (1, 'editing'), (2, 'agreement'), (3, 'temporary advance'), (4, 'reporting of work start'), (5, 'reporting of work end'), (6, 'submission'), (7, 'valuation'), (8, 'revaluation'), (9, 'approval'), (10, 'disapproval'), (11, 'payment'), (12, 'refund'), (13, 'message')], verbose_name='method')),
                ('price', models.IntegerField(verbose_name='price')),
                ('message', models.TextField(blank=True, verbose_name='message')),
            ],
            options={
                'verbose_name': 'transaction',
                'verbose_name_plural': 'transactions',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('username', models.CharField(max_length=32, unique=True, verbose_name='username')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('name', models.CharField(max_length=32, verbose_name='name')),
                ('short_bio', models.CharField(blank=True, max_length=32, verbose_name='short_bio')),
                ('bio', models.CharField(blank=True, max_length=512, verbose_name='bio')),
                ('avatar_url', models.URLField(blank=True, verbose_name='avatar_url')),
                ('gender', models.SlugField(blank=True, choices=[('male', 'male'), ('female', 'female'), ('others', 'others'), ('', 'not set')], verbose_name='gender')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='birthday')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ('username',),
            },
        ),
        migrations.CreateModel(
            name='UserConnection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('bias', models.IntegerField(default=0, verbose_name='bias')),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='connections_to', to='main.user', verbose_name='connected from')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='connections_from', to='main.user', verbose_name='connected to')),
            ],
            options={
                'verbose_name': 'user connection',
                'verbose_name_plural': 'user connections',
                'ordering': ('-updated_at', '-bias'),
                'unique_together': {('from_user', 'to_user')},
            },
        ),
        migrations.CreateModel(
            name='UserMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('is_archived', models.BooleanField(default=False, verbose_name='archive')),
                ('message', models.TextField(verbose_name='message')),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='message_to', to='main.user', verbose_name='from')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='message_from', to='main.user', verbose_name='to')),
            ],
            options={
                'verbose_name': 'user message',
                'verbose_name_plural': 'user messages',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='UserTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.hashtag', verbose_name='tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'user tag',
                'verbose_name_plural': 'user tags',
            },
        ),
        migrations.CreateModel(
            name='UserPayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('expired_at', models.DateTimeField(blank=True, null=True, verbose_name='date expired')),
                ('payment_id', models.CharField(blank=True, max_length=64, verbose_name='payment id')),
                ('price', models.IntegerField(default=490, verbose_name='price')),
                ('stage', models.IntegerField(choices=[(0, 'paid'), (1, 'temporary'), (2, 'canceled'), (3, 'failed'), (3, 'no payment')], verbose_name='stage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'user payment',
                'verbose_name_plural': 'user payments',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='UserMessageReaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('reaction', models.CharField(max_length=1, verbose_name='reaction')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.usermessage', verbose_name='message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'user message reaction',
                'verbose_name_plural': 'user message reactions',
            },
        ),
        migrations.CreateModel(
            name='UserMessageAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('is_archived', models.BooleanField(default=False, verbose_name='archive')),
                ('title', models.CharField(max_length=64, verbose_name='title')),
                ('url', models.URLField(verbose_name='url')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.usermessage', verbose_name='message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'user message attachment',
                'verbose_name_plural': 'user message attachments',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='TransactionAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('is_archived', models.BooleanField(default=False, verbose_name='archive')),
                ('title', models.CharField(max_length=64, verbose_name='title')),
                ('url', models.URLField(verbose_name='url')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.transaction', verbose_name='transaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'transaction attachment',
                'verbose_name_plural': 'transaction attachments',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddField(
            model_name='transaction',
            name='client',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='request_transaction', to='main.user', verbose_name='client'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='issue',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.transaction', verbose_name='mention'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='worker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='worked_transaction', to='main.user', verbose_name='worker'),
        ),
        migrations.CreateModel(
            name='TimelineItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('is_archived', models.BooleanField(default=False, verbose_name='archive')),
                ('is_read', models.BooleanField(default=False, verbose_name='read')),
                ('is_actioned', models.BooleanField(default=False, verbose_name='action')),
                ('message', models.TextField(blank=True, verbose_name='message')),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.issue', verbose_name='issue')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'timeline item',
                'verbose_name_plural': 'timeline items',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ProjectTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.project', verbose_name='project')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.hashtag', verbose_name='tag')),
            ],
            options={
                'verbose_name': 'project tag',
                'verbose_name_plural': 'project tags',
            },
        ),
        migrations.CreateModel(
            name='ProjectPayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('expired_at', models.DateTimeField(blank=True, null=True, verbose_name='date expired')),
                ('payment_id', models.CharField(blank=True, max_length=64, verbose_name='payment id')),
                ('price', models.IntegerField(default=490, verbose_name='price')),
                ('stage', models.IntegerField(choices=[(0, 'paid'), (1, 'temporary'), (2, 'canceled'), (3, 'failed'), (3, 'no payment')], verbose_name='stage')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.project', verbose_name='project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'project payment',
                'verbose_name_plural': 'project payments',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ProjectMessageReaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('reaction', models.CharField(max_length=1, verbose_name='reaction')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.projectmessage', verbose_name='message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'project message reaction',
                'verbose_name_plural': 'project message reactions',
            },
        ),
        migrations.CreateModel(
            name='ProjectMessageMention',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.projectmessage', verbose_name='message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'project message mention',
                'verbose_name_plural': 'project message mentions',
            },
        ),
        migrations.CreateModel(
            name='ProjectMessageAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('is_archived', models.BooleanField(default=False, verbose_name='archive')),
                ('title', models.CharField(max_length=64, verbose_name='title')),
                ('url', models.URLField(verbose_name='url')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.projectmessage', verbose_name='message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'project message attachment',
                'verbose_name_plural': 'project message attachments',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddField(
            model_name='projectmessage',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user'),
        ),
        migrations.AddField(
            model_name='project',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('is_read', models.BooleanField(default=False, verbose_name='read')),
                ('is_archived', models.BooleanField(default=False, verbose_name='archive')),
                ('path', models.CharField(blank=True, max_length=128, verbose_name='path')),
                ('url', models.URLField(blank=True, verbose_name='url')),
                ('message', models.CharField(max_length=1024, verbose_name='message')),
                ('avatar_url', models.URLField(blank=True, verbose_name='avatar_url')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'notification',
                'verbose_name_plural': 'notifications',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='IssueTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.issue', verbose_name='issue')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.hashtag', verbose_name='tag')),
            ],
            options={
                'verbose_name': 'issue tag',
                'verbose_name_plural': 'issue tags',
            },
        ),
        migrations.CreateModel(
            name='IssueReaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('reaction', models.CharField(max_length=1, verbose_name='reaction')),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.issue', verbose_name='issue')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'issue reaction',
                'verbose_name_plural': 'issue reactions',
            },
        ),
        migrations.CreateModel(
            name='IssueMessgeAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('is_archived', models.BooleanField(default=False, verbose_name='archive')),
                ('title', models.CharField(max_length=64, verbose_name='title')),
                ('url', models.URLField(verbose_name='url')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.issuemessage', verbose_name='message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'issue message attachment',
                'verbose_name_plural': 'issue message attachments',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='IssueMessageReaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('reaction', models.CharField(max_length=1, verbose_name='reaction')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.issuemessage', verbose_name='message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'issue message reaction',
                'verbose_name_plural': 'issue message reactions',
            },
        ),
        migrations.CreateModel(
            name='IssueMessageMention',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.issuemessage', verbose_name='message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'issue message mention',
                'verbose_name_plural': 'issue message mentions',
            },
        ),
        migrations.AddField(
            model_name='issuemessage',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user'),
        ),
        migrations.CreateModel(
            name='IssueMention',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.issue', verbose_name='issue')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'issue mention',
                'verbose_name_plural': 'issue mentions',
            },
        ),
        migrations.CreateModel(
            name='IssueAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('is_archived', models.BooleanField(default=False, verbose_name='archive')),
                ('title', models.CharField(max_length=64, verbose_name='title')),
                ('url', models.URLField(verbose_name='url')),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.issue', verbose_name='issue')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'issue attachment',
                'verbose_name_plural': 'issue attachments',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddField(
            model_name='issue',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.project', verbose_name='project'),
        ),
        migrations.AddField(
            model_name='issue',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user'),
        ),
        migrations.AddField(
            model_name='hashtag',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user'),
        ),
        migrations.CreateModel(
            name='UserConnectionBlock',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.userconnection', verbose_name='connection')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'user connection block',
                'verbose_name_plural': 'user connections blocks',
                'ordering': ('-created_at',),
                'unique_together': {('connection', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ProjectMember',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('status', models.IntegerField(choices=[(0, 'admin'), (1, 'regular'), (2, 'outsider'), (3, 'temporary')], verbose_name='status')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.project', verbose_name='project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'project member',
                'verbose_name_plural': 'project members',
                'ordering': ('-updated_at', 'status'),
                'unique_together': {('project', 'user')},
            },
        ),
    ]
